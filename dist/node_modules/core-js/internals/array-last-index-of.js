'use strict';import toIndexedObject from"/node_modules/core-js/internals/to-indexed-object.js";import toInteger from"/node_modules/core-js/internals/to-integer.js";import toLength from"/node_modules/core-js/internals/to-length.js";import arrayMethodIsStrict from"/node_modules/core-js/internals/array-method-is-strict.js";import arrayMethodUsesToLength from"/node_modules/core-js/internals/array-method-uses-to-length.js";const _ref={exports:{}};(function(module,exports){var min=Math.min,nativeLastIndexOf=[].lastIndexOf,NEGATIVE_ZERO=!!nativeLastIndexOf&&0>1/[1].lastIndexOf(1,-0),STRICT_METHOD=arrayMethodIsStrict("lastIndexOf"),USES_TO_LENGTH=arrayMethodUsesToLength("indexOf",{ACCESSORS:!0,1:0}),FORCED=NEGATIVE_ZERO||!STRICT_METHOD||!USES_TO_LENGTH;module.exports=FORCED?function lastIndexOf(searchElement){if(NEGATIVE_ZERO)return nativeLastIndexOf.apply(this,arguments)||0;var O=toIndexedObject(this),length=toLength(O.length),index=length-1;for(1<arguments.length&&(index=min(index,toInteger(arguments[1]))),0>index&&(index=length+index);0<=index;index--)if(index in O&&O[index]===searchElement)return index||0;return-1}:nativeLastIndexOf})(_ref,_ref.exports);export default _ref.exports;