{"version":3,"sources":["services/MarvelService.js","components/hooks/http.hook.js","resources/img/mjolnir.png","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiKey","_apiBase","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","results","map","getCharacter","res","getAllComics","getComic","Spinner","_jsxs","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","children","_jsx","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","View","_ref","imgStyle","className","href","RandomChar","setChar","updateChar","Math","floor","random","then","onCharLoaded","useEffect","timerId","setInterval","clearInterval","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","ref","el","onCharSelected","console","log","key","renderItem","disabled","Skeleton","_Fragment","resourceURI","CharInfo","charId","skeleton","ErrorBoundary","Component","constructor","state","componentDidCatch","err","info","this","setState","render","MainPage","selectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","newComicsList","Link","to","renderItems","ComicsPage","Page404","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","AppHeader","NavLink","exact","activeStyle","App","Router","Switch","Route","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d019102.chunk.js","sourcesContent":["import { useHttp } from \"../components/hooks/http.hook\";\r\n\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n\r\n    const _apiKey = 'apikey=77b917266f3bd79b6fd8dc04288e5a58';\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public';\r\n    const _baseOffset = 210\r\n\r\n\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}/characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}/characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n    // getAllgeroId = async () => {\r\n    //     const res = await this.getResource()\r\n    // }\r\n\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}/comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : `There is no description for this character`,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There is no description\",\r\n            pageCount: comics.pageCount\r\n                ? `${comics.pageCount} p.`\r\n                : \"No information about the number of pages\",\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n\r\n            price: comics.prices[0].price\r\n                ? `${comics.prices[0].price}$`\r\n                : \"not avaibale\"\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return {\r\n        loading,\r\n        clearError,\r\n        error,\r\n        getAllCharacters,\r\n        getCharacter,\r\n        getAllComics,\r\n        getComic\r\n    }\r\n\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'applycation/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Cloud not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data\r\n        } catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n        <g transform=\"translate(80,50)\">\r\n        <g transform=\"rotate(0)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n        </circle>\r\n        </g>\r\n        </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n        <g transform=\"rotate(45)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n        </circle>\r\n        </g>\r\n        </g><g transform=\"translate(50,80)\">\r\n        <g transform=\"rotate(90)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n        </circle>\r\n        </g>\r\n        </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n        <g transform=\"rotate(135)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n        </circle>\r\n        </g>\r\n        </g><g transform=\"translate(20,50.00000000000001)\">\r\n        <g transform=\"rotate(180)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n        </circle>\r\n        </g>\r\n        </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n        <g transform=\"rotate(225)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n        </circle>\r\n        </g>\r\n        </g><g transform=\"translate(49.99999999999999,20)\">\r\n        <g transform=\"rotate(270)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n        </circle>\r\n        </g>\r\n        </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n        <g transform=\"rotate(315)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n        </circle>\r\n        </g>\r\n        </g>\r\n    </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () =>{\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height:'250px', objectFit:'contain', margin:'0 auto'}} src={img} alt='error'/>\r\n    )\r\n}\r\n\r\n\r\nexport default ErrorMessage;\r\n// {process.env.PUBLIC_URL + '/error.gif'}","import { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService'\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png'\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        // const id = 1011334;\n            getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 800000);\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    // metods\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    )\n}\n\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'contain' }\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default RandomChar;","import './charList.scss';\nimport useMarvelService from '../../services/MarvelService'\nimport { useEffect, useState, useRef } from 'react';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\nimport PropTypes from 'prop-types';\n\n\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false)\n\n\n    const { loading, error, getAllCharacters } = useMarvelService();\n\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n\n    const onRequest = (offset, initial) => {\n        initial ?  setNewItemLoading(false) :  setNewItemLoading(true)\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n\n    }\n\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true\n        }\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended)\n    }\n\n\n    const itemRefs = useRef([]);\n\n\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItem(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n            return (\n                <li className=\"char__item\"\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id)\n                        focusOnItem(i)\n                        console.log(i)\n                    }}>\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i)\n                        }\n                    }}\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className='char__grid'>\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItem(charList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ 'display': charEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport PropTypes from 'prop-types';\nimport Skeleton from '../skeleton/Skeleton';\n\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n\n    const updateChar = () => {\n        const { charId } = props;\n        if (!charId) {\n            return;\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n\n    }\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n\n    // save data\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton />\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {spinner}\n            {errorMessage}\n            {content}\n        </div>\n    )\n}\n\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'contain' };\n    }\n\n    return (\n\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt=\"abyss\" style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                <a href={item.resourceURI}>{item.name}</a>\n                            </li>\n                        )\n                    })\n                }\n\n\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\nstate = {\r\n    error: false\r\n}\r\n\r\n    // static getDerivedStateFromError(error){\r\n    //     return{error: true}\r\n    // }\r\n\r\ncomponentDidCatch(err, info){\r\n    this.setState({\r\n        error:true\r\n    })\r\n}\r\n\r\nrender () {\r\n    if(this.state.error) {\r\n        return <ErrorMessage/>\r\n    }\r\n\r\n    return this.props.children;\r\n}\r\n\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} />\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar} />\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\n\nimport './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport { Link } from 'react-router-dom';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { loading, error, getAllComics } = useMarvelService()\n\n\n    useEffect(() => {\n        onRequest(offset, true)\n    },[])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n        .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended)\n    }\n\n     function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n    \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\"\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/errorMessage\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Page404 = () => {\r\n    return(\r\n        <div>\r\n        <ErrorMessage/>\r\n        <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\r\n        <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px'}} to=\"/\">Back to main page</Link>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorMessage from '../errorMessage/errorMessage';\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const { comicId } = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicId])\r\n\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n\r\n    }\r\n    // save data\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n    return (\r\n        <>\r\n            {spinner}\r\n            {errorMessage}\r\n            {content}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst View = ({ comic }) => {\r\n    const { title, description, pageCount, thumbnail, language, price } = comic\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import { Link, NavLink } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\" href=\"#\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n            <ul>\n                    <li><NavLink exact activeStyle={{'color': '#9f0013'}} to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink  activeStyle={{'color': '#9f0013'}} to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { MainPage, ComicsPage, Page404, SingleComicPage } from '../pages'\n\nimport AppHeader from \"../appHeader/AppHeader\";\n\nconst App = () => {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <MainPage />\n                        </Route>\n                        <Route exact path=\"/comics\">\n                            <ComicsPage />\n                        </Route>\n                        <Route exact path=\"/comics/:comicId\">\n                            <SingleComicPage />\n                        </Route>\n                        <Route path=\"*\">\n                            <Page404/>\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\n\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}